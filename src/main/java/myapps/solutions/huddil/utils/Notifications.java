package myapps.solutions.huddil.utils;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.StringJoiner;

import javax.activation.DataHandler;
import javax.mail.MessagingException;
import javax.mail.internet.AddressException;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeBodyPart;
import javax.mail.internet.MimeMultipart;
import javax.mail.util.ByteArrayDataSource;
import javax.xml.bind.DatatypeConverter;

import org.apache.http.util.TextUtils;

import myapps.notification.service.EmailService;
import myapps.notification.service.SMSService;
import myapps.solutions.huddil.model.BookingNotificationTemplate;
import myapps.solutions.huddil.model.CallMeBack;
import myapps.solutions.huddil.model.CancellationNotificationTemplate;
import myapps.solutions.huddil.model.ContactInfo;
import myapps.solutions.huddil.model.Facility;
import myapps.solutions.huddil.model.FacilityCancellationCharges;
import myapps.solutions.huddil.model.JobData;

public class Notifications {

	private static int seq = 0;
	private static String image = "";
	private static String imageFaceBook = "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";
	private static String imageLinkedIn = "iVBORw0KGgoAAAANSUhEUgAAADgAAAA4CAMAAACfWMssAAAAA3NCSVQICAjb4U/gAAAALVBMVEUAe7b///8AZKoAdbMAbq/S6POSx+BXqdC93e0RhLvu9vqo0uZqsdQ9m8h/vduGHyt5AAAAe3pUWHRSYXcgcHJvZmlsZSB0eXBlIEFQUDEAAAiZVYnBDYAwDAP/nYIRnDY1dByoAkJCgNj/QaB8sBSdfQmL7XattTuvY143C90bMmjREkcAA1qin0EeSv4UG5M0j/7bE37RykLjxExVbxF94szkVlgjnM82ILcu/hcg3G73I19oprFIAAABymlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNS41LjAiPiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczpkYz0iaHR0cDovL3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8iPiA8ZGM6ZGVzY3JpcHRpb24+IDxyZGY6QWx0PiA8cmRmOmxpIHhtbDpsYW5nPSJ4LWRlZmF1bHQiPkxpbmtlZEluIHNvY2lhbCBpY29uPC9yZGY6bGk+IDwvcmRmOkFsdD4gPC9kYzpkZXNjcmlwdGlvbj4gPC9yZGY6RGVzY3JpcHRpb24+IDwvcmRmOlJERj4gPC94OnhtcG1ldGE+ICAgPD94cGFja2V0IGVuZD0idyI/Pttk2p0AAAE0SURBVEiJ7ZbZroQgDIbtwg6+/+OOCmVUJDmQzMVJ/OfGqt+U0gWX5dVPRYg8w+GSkptA0SgACDRKYoRDimmIYwdFK045BPA05BK1gOCGosS1elyGPH5j1GMxVpd+NB+E0W+cdYMOd9IZk3im6Hir1bHsZ498KGexGJyXktX7T1d0sXZsMWsIOiZ6RImszzK4l0MxEvLqS55UfGodInl+gEGqCBV8FR62jkidQSnAZOGs0ObqGfQKrkoN2fF4l50F29bpg96GU6Dm7rILrnv+XY216Z0eqPfcbWUsdrOvPTA3C6Gs1v4xRpl5dUA0Q7ADysrqLFP3UdYBZS/QvOAL/n9Q5mo8z9WmO5qDnkjbrLS1KsdixNK3nMoN3X4hlGOGL4dOfUtuPJ6CdPzO19R5+upX+gCk9Q2CrUOk2AAAAABJRU5ErkJggg==";
	private static String imageTwitter = "iVBORw0KGgoAAAANSUhEUgAAADgAAAA4CAIAAAAn5KxJAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAyBpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuMC1jMDYwIDYxLjEzNDc3NywgMjAxMC8wMi8xMi0xNzozMjowMCAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZVJlZiMiIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENTNSBXaW5kb3dzIiB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOjRDQTBGRjlFRUM2OTExRTdBQUQ1RDQ5MDA1Qzk1MDA1IiB4bXBNTTpEb2N1bWVudElEPSJ4bXAuZGlkOjRDQTBGRjlGRUM2OTExRTdBQUQ1RDQ5MDA1Qzk1MDA1Ij4gPHhtcE1NOkRlcml2ZWRGcm9tIHN0UmVmOmluc3RhbmNlSUQ9InhtcC5paWQ6NENBMEZGOUNFQzY5MTFFN0FBRDVENDkwMDVDOTUwMDUiIHN0UmVmOmRvY3VtZW50SUQ9InhtcC5kaWQ6NENBMEZGOURFQzY5MTFFN0FBRDVENDkwMDVDOTUwMDUiLz4gPC9yZGY6RGVzY3JpcHRpb24+IDwvcmRmOlJERj4gPC94OnhtcG1ldGE+IDw/eHBhY2tldCBlbmQ9InIiPz5l25rwAAAFfElEQVR42uxZW2wUVRieOXNmdndmdru03RZa6Y1iubSNBCUYjRCEGBI1qDGmXohRExOJBh8w+qCvPJh4SYw8GUBJ1ERjHwgRDQWsFVsVlbYIpNA2dJfubrfddndnZudyjn/bxLRUZme2Wy3J/pnsw8yZc775zvffzrIbD18iPGaWtyHDxMQjUMwtc6AEIcQQwix/IwQxt4kVgRaBFoEWgS5T+y+SJ2UYk1D45ViWY5cl0KxFdUJFjKpELCB2QrfGNAKYfRjNRQyfAekRBuQPFF41CDUp4+NY6opFyigmaS31PFYn3R3yrAnwGIBqVn9S7wirx68rUwaBOTWLwsfUyfgOCf85rttAzQEU+Kj389UiPhVR/DxyiJXQaS73bSh5vSUozKFulYTh2lktPt3of6Mn0TehbyoT7qvwvtAUePdCsjueFTGbJ1BY79k1/icapL1nYt1xLcA7cj7g8kDriteaS241oLlUOLqtYjBl3BPysixz9oZ6bCDlxWyeXg/ESDzaWumVeXTo/tDmMs+knrvUyph0V7Vog3LWQj5uS8U0yh9uqPu64uuDQnNQIDQvoPAWyCggTI+p9HGfbq/cUytN6cSk1Eaa8MqrG0scSjmmWufHsh9sDR3ZVmFRajNzjq0Hdf8j8KAHfQy8lnve70sCteDLC7UPmt6wQthU7nEIFHjd3xIEIp87HQVnsnEDZO/yoFHVnPfui+sC3+xa9UiNRCkFz53/kAFK6mUXIQ+WiGvWMx3Rs6OqbOusyJ7OtEEvJ/Wb7q8t4YHaz3esfKpeBvcCuGmDAJdAjEWYMq+Lxiapk+fPRDujqj+Xm+KcSeWzgdRDq8WFjzaHPHCFM+ZPUe23ePbnuJbQLLg/NvPr0EDxgykTVLTYzOTl2I6Ienw483Ct9K8DqiX8ZIMMFygkppoTOuGRiywJOQmGO8kl2D48gW4a/PhAdwK25oEqnw0EH2Zr/XytyxwLsoHkhB18my1QhoJyjm6vvDCuJ7KWblFP3jXFLSyuEkjR/CKBIoYFDSkm3VntW6KqJaaZxFlezun15HREWbryqjehF6Zw5jn2yJUUKGkpUAILP0Y1h3LKARRqxGsp451fxpcCaP+EHlFMh1EidwADx/9qKP32r+NWoWn9bkTRCS3M1s8axKbDV6Z2fxtpH8qMKlZBUI5nyckR1es4jDgCCt8NNd7jdfJQyoxkzIIA/XowDaJynh2ww6+JadbeO/0iLkwchTT7yaUpCbvogR0NhcwxkrHe7BkrlDrf602OKKYbnI77epln24eVg79PLB7lqbD6xdW0KzrdHUDAvh/6a/LlzvjCws+5XZsy3upJsHPq8cL39TAztFAnRjLnYlprqbAl5NlTK9f4XcwQV61XusaimiVhd813Pkc6Pg6BY0ENmtDIbDvl0EYV86XOGAR50T3K3GXebLcFP2SmduRYttyD2hoCbY3+dUHe+TJ94/r+c/HLk4bM53nahW1QQptRI2MFMhJlRB41BfgdVb6WMg90pK7W+PJq+uAfE0mDOD/CcMeoQem9Fd62RhnK+PxmPx/PfnRx8vuwApWH20Mhp0DBK6G7+LA/eeJ65tFaafdqqcnxXkMzDV1U+3AakqRq0by3e54rrz82QAU7BFCBQ7cAYe+uMuHBKrGxhF8b4FeK3E3ZL6UTSLADKaM3kT0ZVsOKac2c46FC5DJWN3LvKQCCCyTbHc92RTXwp6CAqkSuwsd5OQQREZwMKIRiJapa6kyJBRvtXcxZ6GLiKBADImNm1obdBP+9mDRm+2l25ik8gUwro6U6ws7HS6YBF7rLK3zA/7+sCLQItAi0CHTZAkW3A1aEMMrqhBT+j0YoAmRJWHjfNEla0d2WKsgw/xZgAN/mafhcXPJIAAAAAElFTkSuQmCC";
	private static String imageGoogle = "iVBORw0KGgoAAAANSUhEUgAAADgAAAA4CAIAAAAn5KxJAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAyBpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuMC1jMDYwIDYxLjEzNDc3NywgMjAxMC8wMi8xMi0xNzozMjowMCAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZVJlZiMiIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENTNSBXaW5kb3dzIiB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOjdDMDFGNjE0RUM2OTExRTdCRjA3RjNEMDMyMjRCOTgzIiB4bXBNTTpEb2N1bWVudElEPSJ4bXAuZGlkOjdDMDFGNjE1RUM2OTExRTdCRjA3RjNEMDMyMjRCOTgzIj4gPHhtcE1NOkRlcml2ZWRGcm9tIHN0UmVmOmluc3RhbmNlSUQ9InhtcC5paWQ6N0MwMUY2MTJFQzY5MTFFN0JGMDdGM0QwMzIyNEI5ODMiIHN0UmVmOmRvY3VtZW50SUQ9InhtcC5kaWQ6N0MwMUY2MTNFQzY5MTFFN0JGMDdGM0QwMzIyNEI5ODMiLz4gPC9yZGY6RGVzY3JpcHRpb24+IDwvcmRmOlJERj4gPC94OnhtcG1ldGE+IDw/eHBhY2tldCBlbmQ9InIiPz5LQ5xxAAAHvUlEQVR42uxZCWwUVRie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";
	private static String imageInstagram = "iVBORw0KGgoAAAANSUhEUgAAADgAAAA4CAIAAAAn5KxJAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAyBpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuMC1jMDYwIDYxLjEzNDc3NywgMjAxMC8wMi8xMi0xNzozMjowMCAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZVJlZiMiIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENTNSBXaW5kb3dzIiB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOjBCQjI5OEQxRUM2QTExRTc5Nzk4RUY5RDMxNUJCMEU0IiB4bXBNTTpEb2N1bWVudElEPSJ4bXAuZGlkOjBCQjI5OEQyRUM2QTExRTc5Nzk4RUY5RDMxNUJCMEU0Ij4gPHhtcE1NOkRlcml2ZWRGcm9tIHN0UmVmOmluc3RhbmNlSUQ9InhtcC5paWQ6MEJCMjk4Q0ZFQzZBMTFFNzk3OThFRjlEMzE1QkIwRTQiIHN0UmVmOmRvY3VtZW50SUQ9InhtcC5kaWQ6MEJCMjk4RDBFQzZBMTFFNzk3OThFRjlEMzE1QkIwRTQiLz4gPC9yZGY6RGVzY3JpcHRpb24+IDwvcmRmOlJERj4gPC94OnhtcG1ldGE+IDw/eHBhY2tldCBlbmQ9InIiPz7nL1DiAAATr0lEQVR42tRaeZAdxXnvr7tn5h17n1pJqwMkdIEQAoHAFqpggxOIHXDhVCDBInY5gYqdVOyqUCmciimXgzFBmFTFIQmB+CTGduEyWFy2OQLG4kYgS6zQsbp2V9Leem/O7s73dc+8twJip1L+I9lqzY7m/M3vu35f94Ixhv1/+JH/3Yl6qIcORDvfDvcejE9MZmGo0kRnmcZTYOjrcMsM4/a/3BhhmMAdjfvMbu0ODTxlQNM+bd0pRvuSgZQQBKLaInsXlRauqi5Z19o5WHpPPPBuRk+Mp9/fNvnijpPHjiX0RITDDF4HdNI4fGDoOFgQQtstvR73mYMoCK7G2+mIPUjfo+k4QhQK/0vHLXQAbZiiZwYV2X9Gdf0185Z/sPvXAB16O7zrn48eORITDho5ILpUN7HijrBEypxOIwglQUG4dKSB2FFoGeUWtEUM3F5sgTJm0YN7Np4HWP/xBRd9epHw+XsDfeqpqXvvGwlrWQMiMwVW9wx7RDB8q5aOS1YANdoS5sBpbvJ9cAcdbkseIbb8WZrpwQ4ic78JML1q8ebuS29d4VXFO4Hu3VP/4s17k0gVnBX8AXmevRTZ0gUs5JL2JWvg09bcjtrcOwt8uWuKgjmw4IAVhOA/KKxFbm/fauD0y/svuXWlPV8E08Tx5O5b9+vpxDN0jb2bWMFHcgdauyPEnB2EjCstcs/TOZeFJxTomyGFsDiRBpyznEXGLUbuIDrEjOk8Phkb3jb62pLSuhuWNIFu+9bI+L6an/slvQBv5dYOYDTZiw5qHaY6SlWcCaY9aT0B7FOZi+VTkRW2wt/ackkfqwzLjJBc+FKWPYGoETTBtvmjgRtvInbNnvsPrfmjhV6LJKBRTe18etyPM27BIXN5UOMOo5dw0MlMnCXp4Or2ead19i+tdg9WOvorQUVIn3MO3BkS3KtyZvIfY9+qmFZahSqZjmcP1Wb2zs4Oz068MRGfSMpdZQDhnLRwRbCZhayvJqLhR8eWXb2AgA7vnD15uBYYhyw3sc1K2hpdhxO1RWvafutTZ667YlAG4jeVw6f3TA19Y+jtrw8JIb2WwFqfWxvZ2Nd2B+DQQ0dzoPtenRJG8Ty0TYNLvJZlKpkNz//o4DVfOX9usviN/LQv79jwxfPnXdT/6i0vpscir+JbKq3r2cC37gPhkVruo0ffmhWE31BQgyYHAG2/KIvr4TW3b9jwsWVzX5CGWX28XhutoT+oSKHX6lSZzOUysJ7oeLGhjY4hQQSSl4QsyVJftdRTKfVWGk8b/J3F/Rv7n7zy4fq+WtBeYc7rXUK1BEOY5EBnx+qSZxaiHRT1GsOlfmJmw9WnzUU58vronkfePvDYvvh43UQZpBqULgLIBmpOBbkcRQe4GsbyXxj2PhdV0X3uwKKPrFz4uytkxcOTfmfp/Lsufu6aR00Ui8CzXmcrF1Vq9F+dA1VR6POUM+UKJroBAk1mQvTLq770vgbKZ7c+9+JXt/sgKiWv7HFZ9YRNMJTz5xQF5x+Uzmyiy0OfoGv8UfhTS449NjT68K7da3ov/JePtq/pw/Od6/rOu2vTS5/4KTkY4cNnI2VkerQ2Y+6xUSqYokRN6VBR1dEK0uTiG9YKL/fLn3/1uee/9HRnW6mjI6iWRcmDAIxPQ3tMS6Y8HEZ7VLFwR3kcR4aGoh26AIfxuBFhiteUfNQiPNx9/LlrvxOfqLlXzLtsSff6blOPOIHBYRM2aMeoxZEpxEeDKXoNy1gcDZ7VsepDS90jju0ce+XOZ/sHWssSSpzA+ZhHESLQ9dJCxEJFt+fvUELTFrF6IvNk6uNWaKjHS7as3fTYls0//eSyPz3PkyY9OPnWbU826nnvxfNNvS7ICdGqaGEiDv+bA+UEUXOL1YMMgfIo6lvaymVO5/5tu0vMBBIIHKOyKXPyiEup3eMQNHptBGEIYR3iSOiMF49FaiGq91wwb9Wtl7Wu7mtd2bf6C5d2LO9Ehzz6vdfqB6fci7o2zpcSK3AmCkhWwRRAQSN2JUH5kPkm8/FT4rhnaZu7OQvTQ9t+WQ0k1i2f8FnLsowgsgz3JWRCx3p8Uk1MeVVWGay2LGkt9/ssOqnGxqFeE5ABfkNcryxpa6ohzjvPmu+hIpuoH390lzvYdmZveV4J4sSaJSO7AwVMHkw89yHlu1LOlOKqc7DV3RxN1LKxmZIUPn0lswFkcx1zElNnU7O8IuZffVbvFWe2n7NItAaYl0yqwuHx6Wf3jt3/4sk3j8i2CvdMfODY3IoV/XLUR2cyuv7GqDsmWv2gtxSOT3NDwHSe3wqgyKUhboyDyzW6lGrpr7qbw5EZJNivYiJRnJJFXtOpHKhMhfX5165fsOXCltXzT9G5nqiuGsDRf+2G8R/vOHTXo/GBydpr+4du+Fbfxzbg2eMPvJodHA+qPqgsPTyZ3yV4eX413HECqoH1ScLZTE+Sirt2nicMmQmjxCvneiWdCWWaehR9QBreilHKOtibHJ84/ZaPLLrxkl9RfkQ16Pv9DW0XLN593T9FQ+NTP94x9aM38XtBCL+9bDS9mMVxszcqC64zKjdArNuM2gBKL1aOTnQ7hlgxMvyipkepVJmkGgs2hbkyq1R4cvktH144B2V6Ymbm57uTI5Nod9FWrq5d3LL+NHeqtLhv9Xf/fOj6ryVDExLLj6GvNoaKmBQGsoz0lRV9WMbARrqV+trmdZMD9SjDUyIkNBhYNoR5Udh1FEudkkvYToi8Ez95fHpgy8aFN36ggXL0vp8cvfPhbGQGbWV9WDOPtW46Y+nWT/oLqAHyBzqX3nbt7su/AuUyRhK4BhHrBUreLMVqQEZGC5Tw8RjsCmx1s/BVHvUU7wY5I5UpXTbBNMYLsZZm0sWg3SLlPE1kBQau39RAefi27x383H28pqp9PZWerkpvV6W/p9zeEf7srb3X3hHuOuQuq65b2r/lYj05Q1qCU62mTGk1BisaIo66EVQhcKmkg9WOFqixecumHgnoAAQailtBZxJij6eeSKSIhUjMzETflWvLywfcBce/+ZORL/+g0t8blEgCSpsZkHsJvNTXle05PrzlzmzipLu4/zMf8ls9SFPKkQTISgubKXOg6BRoWKD2yolxaFQmm7ctSox9lmLd92TivoNsAVngR54fel7o4Q5ug7D7inV5lh2fOXbn9yvdrVKQEQUw9BnaYbSPiIPO1mzvsZltL7jrvfldLe9fzsK6rQXa6kmijRW8cKG5UIxCwnVv2lFGQKkgWXC+jAMvRliloE7u4e7kyg8izw0/knCysqhSOTuPkvr2N/jxkVIH9/1UeqmUqQCrb4CoIqzGeJVy/ck3G5xVNy7HlES0oRdR7cHwVc28RhxjhBBKbrN9M+oRIpMRqgcsdAISbiJmYg5NoJbI2ClroyK/q8wr+XyGGhn1ypgiUkZdv7J1Hqho0PO5k00C6/3eERMmUPbpld1Vzq1BqcUjcYTUNnzUylH6TnQIajSt7sqBBn7M/FiKFIuh5Ak2SAgUQBdAMyLSI+gEPotloFgRatwk0o+FF6PKBtvck0kzJyc4JWWXDV1cOySSAtlmSm7yhsLMnWhwDkrNv83XvAEU2WJ+KK0w42g4HYOOWINRYTw/EX7CbUfFDMbBSRRczDaGoj2QXkRAsa4ZF8EYzA6uwB2VIiux7OiDwMtrZx2f7/zSFkjbxDcawrwLsjFEBVqxZq33CSiZXiBQlqLCYCbhTe9G08c4chkstZk+ko0c8ZaSmwZnrhRBKmQI4BFQbUWPsOKb8i2pfJ1NVzZuBplXkPStwxRGjmvyZpWDLppr4ts22AAZF7IZTBRGGAde7MnYwx0Ki6TJKNdImPAS4aXcT0VJiWQq3fFyHsUrV5UvXM+mj3Iv4TLmnh0y4pg3ZEJbCLmZrX7w3BxGpqNn3uS+zLtcNHE+/dYAqlnBqO1sMKMX6QnZIpRegiZ27oiImz4qGIazoJG4uJYdXvLEAyYKramg7aabvWWDbHaUYIkICG7EvZAjzbwOMyOdN20JNq7Ns8QjL2S7hgW2MnZGiKoxuNwERdq2EEk7F3MLDaAYRuimkjhLHBqEBYU5UC2Tg+JBSceROdnmmeHXsxdzZc7nLWi75XbZ02bGD0A0wbNpyGYhnWYzI2z8UNtfXt/66Y/nZEXJ7NZviwqWc1ZkcouVN4PJKFtrSAY0nFUVosRLACHmPoq5LcXQbuQ2HnjSywg6mOZEVk81emCrWLaGDyymkDptRdu/PZj+bFv6yvPqyGGWaFZpk6vPkRvf719wQQPEybvv14eGMbB0kmGRsUyRfsKIalbsOC3ygPsSwRqihIAiW4gSsaIa1ykTKWrNHGjJ50GGZuXcGcjCRdNN7otu/0T589+Brn4ivq3Tv/IPcZg4ZEpj88bEKdPZ4XcfDO/9tuzrQX1I8y8kmISdDFEcO+QCqEky22QbF1bMzKn1QmYuVoRHgGhHxiyLctMHgfA0lymXGQYT9zNuHUD0tLKJoeiO69WuX5wimYMyVKpzUZpaLfzaP9bv2Cq6S/go8BTgQ/BpWCptYQCUlFAwmiFfbgrD5NOTjTl8dD5k1NKJIUZljSHQcDpntLNX0DRWhFIXRN5F0EciJ92tZnxX8uWr5Obr5OU3wryl75TNSZw+83j0jXvUgSOyt5e0R5q4sDF2+g2zHZpOdDYnTvREDROZZVS7SV2XfixQkTEklbI9FVkUNQxCMz6cM9TWA+USGLzfh8YkptOS+KhWHyqefvbf4+0/4Ge8j6/YyNr7gUvMCXr/UPbqdrVvn/FaZF+7RqoUzYZjTXHzrRimZNs08pYNNKItOzIOnigyFM1YukRpmzuZWR9VXGRgM7ApGTO+Nwfa2i2Xr9e7H+GizSpn94luNgvTnFV1GPKJYkNPqJ2PGzd14Cq+KIveVuqrM4xFyTCB2w8EG+hGGuo6eFTetCY3+8ikGpsC6YSEcXNQ0DC9BYo34CBGUfuYMsbK/mYfc95V6c4f4lnbg9opbceqtkpO25yC0eBVwNZw6gaomXUzLwoy5iZ48Fbtsji+FhtKbLzjODh7sLRxdd71bB/S0zVpp9B0MQ9tGrVe+BplPKeox6CxelYGbOwVc+IA9NC0NF/722LBWjO1g5e6rOS0iT6forQrL9rKDMwTmaaKSLPLlgztJg/JDNy+kmuqPFSPBKm4rDbRedNNUPLzzPCfO7nn5cUbGhPBRdSDLxEf9t3gG5A4MCVJSMbUC/fmlAZVcf090LmEJdMoy8D3SWEEHuBluKV9yXwBgcAjLADmM3oOBjXPUASBG0A9IxO0jzFl4hl1YqR63YdLl2zMFeP4TLx9D6+WIY8A05iwLhitBCzG52rMlNiZ2fRrmN9lXr/HLN8Eyy+ljxlYLT/zpHrq79ieH7J0gglMkx59JydHIE9189lUZvKJWHBGowJip71SiVIHha6uaYMdzZKVLV/4s+ADmxtaZPyv7lGjU7yj0y0TuXUnNleP8rZ2M2uwT0VFR34krKF4AF6mn/kbMbiBlTqsNO8VV9zJpv7C7H+Cje82s4dZirldUWlQ2g5aSLADY9mwFIMHt6hU7VyMQcLLrNwN808XazfKcy9AyzSnybf+R/jw86JngZvCd9/cEEZFZepdrI6/RCgFzQyABLeDHsCyKf3Q1Xzz37O+vEliHUvgnE/NcSFt9Q4rnL7hWHMlkVuI4M2sfopcMrP/8PXavz4kB7pNZgr/bGiqot8n0y88i1Ka5NwTKMA4uZ1vhwetnSwbNU//CTv4eAHoHWuUyL20wyNnyIc/Z9+jKsXFe6LUY2PTn725dvc3eUeFUgHXrrKzRsLGvNJWLnx08Lys0gqmjhWcSRog3NbSUKmQIV/9PBu+H3rOZz3rWfsK5rUy+N8uj8ShPjaS7Xglfenl5PVd2ehJMb8Xex/KzMouSbm16zyWoHzhaTlQaF8o+lewyTfBI4hYGAiowHSNwWX7X/QtaIf4sBl+ix28nwU9GGpQ6kc/JrgQGCby9ULMPiTQ0E01amT0WpMqlmSsHusoZlGmJybVyJgaOaEn6oa1sKBddLbomBaoqdvkrg65lOZW86D9qnXNlTux9jr9i7+lxIQNg7QQLVAyGafQtiscJQad9JEYPdkxM3OYYUdDHCjKmtrGE+ZRhIjgUtxq1Hsm1gxxRMbEOIAmh1IPqj73kUWsWFynlBOJSE31CodWTWevbFhcWjXQBMoXXcxm/oAdeJDmrAioINPnKO1w0dAIDrdyaIr1Q0SptaFiQ+sk1PrhDhZVJBW3hBW3hkWaYyse4jCsTh9otQejL4R8XZ+GNi4nQUup568vP2XRlrCu/mOTnjCTLyNWWlhFuE2gogAKzWh+F1D0MGIDwXGbsDC7curxSFhQ1GqrYqzOJHBg6y05CZVltxSaLwLZ+bH2St+tVwfL+t71pxrch7WfZXvuYVMv2HmZuUD5HKDQLBg5UJuhFK3Tg1J21RvFm1NhyriCRE5MXkKzCjrPtSyzWFPW4LJY8UUlRCirm1f8qj/VYEd/ZMafY3om59LBdQvAMHdJ9h1AiVSb/5WxW9QPgD6QKBNn1lnJB3RI/qpqWteBRgjqpEBn1XGgUl/FgdZVb+2qrs/9nr983q/5mxJbd+ts5nUz+xrLJqhhzXN1voZsis7JCijrZS6YtI0zijAMeXRQjDkFNupNmiFQkxiDQGPa6jq9BIHqGlfYUadlVuqUZ6+rXHaRv3rx/+iPX/5v/vyXAAMA2IXMFSm1+aEAAAAASUVORK5CYII=";
	private static String imageBlogbeats = "iVBORw0KGgoAAAANSUhEUgAAADgAAAA4CAIAAAAn5KxJAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAyBpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuMC1jMDYwIDYxLjEzNDc3NywgMjAxMC8wMi8xMi0xNzozMjowMCAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZVJlZiMiIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENTNSBXaW5kb3dzIiB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOkQ2M0NEMTBDRUM2OTExRTdBOTJGRjc0MTJERDc3MTc0IiB4bXBNTTpEb2N1bWVudElEPSJ4bXAuZGlkOkQ2M0NEMTBERUM2OTExRTdBOTJGRjc0MTJERDc3MTc0Ij4gPHhtcE1NOkRlcml2ZWRGcm9tIHN0UmVmOmluc3RhbmNlSUQ9InhtcC5paWQ6RDYzQ0QxMEFFQzY5MTFFN0E5MkZGNzQxMkRENzcxNzQiIHN0UmVmOmRvY3VtZW50SUQ9InhtcC5kaWQ6RDYzQ0QxMEJFQzY5MTFFN0E5MkZGNzQxMkRENzcxNzQiLz4gPC9yZGY6RGVzY3JpcHRpb24+IDwvcmRmOlJERj4gPC94OnhtcG1ldGE+IDw/eHBhY2tldCBlbmQ9InIiPz4jF619AAAHo0lEQVR42uxae1BbdRbO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";
	private static String headerReminder = "iVBORw0KGgoAAAANSUhEUgAAAlgAAAA8CAIAAAA1/lPuAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAyBpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuMC1jMDYwIDYxLjEzNDc3NywgMjAxMC8wMi8xMi0xNzozMjowMCAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZVJlZiMiIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENTNSBXaW5kb3dzIiB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOjY4NjIzMEEzRTU1QjExRTdBMjZDQkE3NkI4OUYyQzFGIiB4bXBNTTpEb2N1bWVudElEPSJ4bXAuZGlkOjY4NjIzMEE0RTU1QjExRTdBMjZDQkE3NkI4OUYyQzFGIj4gPHhtcE1NOkRlcml2ZWRGcm9tIHN0UmVmOmluc3RhbmNlSUQ9InhtcC5paWQ6Njg2MjMwQTFFNTVCMTFFN0EyNkNCQTc2Qjg5RjJDMUYiIHN0UmVmOmRvY3VtZW50SUQ9InhtcC5kaWQ6Njg2MjMwQTJFNTVCMTFFN0EyNkNCQTc2Qjg5RjJDMUYiLz4gPC9yZGY6RGVzY3JpcHRpb24+IDwvcmRmOlJERj4gPC94OnhtcG1ldGE+IDw/eHBhY2tldCBlbmQ9InIiPz4A00XAAAARu0lEQVR42uydCXyM1/rH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";
	private static String headerBookingConfirm = "";
	private static String headerCancel = "iVBORw0KGgoAAAANSUhEUgAAAlgAAAA8CAIAAAA1/lPuAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAyBpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuMC1jMDYwIDYxLjEzNDc3NywgMjAxMC8wMi8xMi0xNzozMjowMCAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZVJlZiMiIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENTNSBXaW5kb3dzIiB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOjdEQkIzQ0FBRTI4QTExRTdCODEzQTVBNTlEMEUxMzU0IiB4bXBNTTpEb2N1bWVudElEPSJ4bXAuZGlkOjdEQkIzQ0FCRTI4QTExRTdCODEzQTVBNTlEMEUxMzU0Ij4gPHhtcE1NOkRlcml2ZWRGcm9tIHN0UmVmOmluc3RhbmNlSUQ9InhtcC5paWQ6N0RCQjNDQThFMjhBMTFFN0I4MTNBNUE1OUQwRTEzNTQiIHN0UmVmOmRvY3VtZW50SUQ9InhtcC5kaWQ6N0RCQjNDQTlFMjhBMTFFN0I4MTNBNUE1OUQwRTEzNTQiLz4gPC9yZGY6RGVzY3JpcHRpb24+IDwvcmRmOlJERj4gPC94OnhtcG1ldGE+IDw/eHBhY2tldCBlbmQ9InIiPz5r8E0nAAAQzklEQVR42uydCXQUVRaG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";
	private static String key = "wMpW5yInauU-AS4ZhsVUWc3KHlusDBUJhlMYlcQV6V";
	private static String sender = "HUDDIL";

	public static void sendRejectedNotification(String emailId, String phoneNumber)
			throws MessagingException, IOException {
		String subject = "New facility request ";
		// String message = "";
		String body = "";
		new EmailService().sendEmail(emailId, body, subject, image);
		// new SMSService().sendSMS(message, phoneNumber,
		// environment.getProperty(product + "sms.api.key"),
		// environment.getProperty(product + "sms.sender"));
	}

	public static void sendBlockedNotification(String emailId, String phoneNumber, String name, String facilityName,
			String reason) throws MessagingException, IOException {
		Template template;
		MimeMultipart content;
		template = addFooter(readFile("mailTemplates/FacilityBlockedToSp.html"));
		content = template.getMultipart();
		String body = template.getBody();
		template = addImage(body, getContentId(), "confirm");
		content.addBodyPart(template.getImagePart());
		MimeBodyPart bodyPart = new MimeBodyPart();
		bodyPart.setText(template.getBody().replace("user_name", name).replace("facility_name", facilityName)
				.replace("disp_reason", reason), "US-ASCII", "html");
		content.addBodyPart(bodyPart, 0);
		new EmailService().sendEmail(emailId, "Huddil - Your Facility Blocked", content);
	}

	public static void sendBookingConfirmation(BookingNotificationTemplate notificationTemplate)
			throws MessagingException, IOException {
		if (notificationTemplate.getFacility().getConsumer().getEmailId()
				.equalsIgnoreCase(notificationTemplate.getFacility().getSp().getEmailId()))
			return;// don send email if the booking user email id and SP email id same - scenario
					// to handle blocking a facility.
		Template template;
		MimeMultipart content;
		template = addFooter(readFile("mailTemplates/BookingConfirmationConsumer.html"));
		content = template.getMultipart();
		String body = template.getBody();
		template = addImage(body, getContentId(), "confirm");
		content.addBodyPart(template.getImagePart());
		MimeBodyPart bodyPart = new MimeBodyPart();
		bodyPart.setText(
				template.getBody()
						.replace("user_name", notificationTemplate.getFacility().getConsumer().getDisplayName())
						.replace("facility_type", notificationTemplate.getFacility().getFacilityType())
						.replace("booking_id", Integer.toString(notificationTemplate.getBookingCost().getBookingId()))
						.replace("from_time", formatDate(notificationTemplate.getFromTime()))
						.replace("to_time", formatDate(notificationTemplate.getToTime()))
						.replace("facility_name", notificationTemplate.getFacility().getTitle())
						.replace("faciltiy_city", notificationTemplate.getFacility().getCity())
						.replace("facility_locality", notificationTemplate.getFacility().getLocality())
						.replace("facility_address", notificationTemplate.getFacility().getLocation().getAddress())
						.replace("sp_name", notificationTemplate.getFacility().getSp().getDisplayName())
						.replace("sp_emaiId", notificationTemplate.getFacility().getSp().getEmailId())
						.replace("sp_mobileNo", notificationTemplate.getFacility().getSp().getMobileNo())
						.replace("amt", String.format("%.2f", notificationTemplate.getBookingCost().getTotalCost())),
				"US-ASCII", "html");
		content.addBodyPart(bodyPart, 0);
		new EmailService().sendEmail(notificationTemplate.getFacility().getConsumer().getEmailId(),
				"Huddil - Booking confirmed", content);

		if (notificationTemplate.getFacility().getConsumer().isMobileNoVerified())
			new SMSService().sendSMS(
					"Congratulations! Booking confirmed for facilityType at facilityName - time. Your booking ID is bookingId. Thank you for using Huddil."
							.replace("facilityType", notificationTemplate.getFacility().getFacilityType())
							.replace("facilityName", notificationTemplate.getFacility().getTitle())
							.replace("time", formatDate(notificationTemplate.getFromTime())).replace("bookingId",
									Integer.toString(notificationTemplate.getBookingCost().getBookingId())),
					notificationTemplate.getFacility().getConsumer().getMobileNo(), key, sender);

		template = addFooter(readFile("mailTemplates/BookingConfirmationSp.html"));
		content = template.getMultipart();
		body = template.getBody();
		template = addImage(body, getContentId(), "confirm");
		content.addBodyPart(template.getImagePart());
		bodyPart = new MimeBodyPart();
		bodyPart.setText(
				template.getBody().replace("user_name", notificationTemplate.getFacility().getSp().getDisplayName())
						.replace("facility_type", notificationTemplate.getFacility().getFacilityType())
						.replace("booking_id", Integer.toString(notificationTemplate.getBookingCost().getBookingId()))
						.replace("from_time", formatDate(notificationTemplate.getFromTime()))
						.replace("to_time", formatDate(notificationTemplate.getToTime()))
						.replace("facility_name", notificationTemplate.getFacility().getTitle())
						.replace("faciltiy_city", notificationTemplate.getFacility().getCity())
						.replace("facility_locality", notificationTemplate.getFacility().getLocality())
						.replace("facility_address", notificationTemplate.getFacility().getLocation().getAddress())
						.replace("c_name", notificationTemplate.getFacility().getConsumer().getDisplayName())
						.replace("c_emailID", notificationTemplate.getFacility().getConsumer().getEmailId())
						.replace("c_mobileNo", notificationTemplate.getFacility().getConsumer().getMobileNo())
						.replace("amt", String.format("%.2f", notificationTemplate.getBookingCost().getTotalCost())),
				"US-ASCII", "html");
		content.addBodyPart(bodyPart, 0);
		new EmailService().sendEmail(notificationTemplate.getFacility().getSp().getEmailId(),
				"Huddil - Booking confirmed", content);
	}

	public static void sendMeetingInfo(List<ContactInfo> contactInfos, BookingNotificationTemplate notificationTemplate,
			String name) throws MessagingException, IOException {
		Template template;
		MimeMultipart content;
		template = addFooter(readFile("mailTemplates/meetingInfoToParticipants.html"));
		content = template.getMultipart();
		String body = template.getBody();
		template = addImage(body, getContentId(), "confirm");
		content.addBodyPart(template.getImagePart());
		MimeBodyPart bodyPart = new MimeBodyPart();
		bodyPart.setText(template.getBody().replace("m_name", name)
				.replace("from_time", formatDate(notificationTemplate.getFromTime()))
				.replace("to_time", formatDate(notificationTemplate.getToTime()))
				.replace("facility_name", notificationTemplate.getFacility().getTitle())
				.replace("faciltiy_city", notificationTemplate.getFacility().getCity())
				.replace("facility_locality", notificationTemplate.getFacility().getLocality())
				.replace("facility_address", notificationTemplate.getFacility().getLocation().getAddress())
				.replace("c_name", notificationTemplate.getConsumer().getUserName())
				.replace("c_emaiId", notificationTemplate.getConsumer().getEmailId())
				.replace("c_mobileNo", notificationTemplate.getConsumer().getMobileNo()), "US-ASCII", "html");
		content.addBodyPart(bodyPart, 0);
		StringJoiner phoneNums = new StringJoiner(",");
		List<InternetAddress> emailIds = new ArrayList<InternetAddress>();
		for (ContactInfo contactInfo : contactInfos) {
			if (contactInfo.getEmailId() != null)
				emailIds.add(contactInfo.getEmailId());
			if (!contactInfo.getphoneNo().isEmpty())
				phoneNums.add(contactInfo.getphoneNo());
		}
		if (!emailIds.isEmpty())
			new EmailService().sendEmail(emailIds, "Huddil - Meeting Invite", content);
		if (!phoneNums.toString().isEmpty())
			new SMSService().sendSMS(
					"Hi Participant. You have been invited to a meeting at faciltiy_city on from_time. Please contact c_name (c_mobileNo) for more details."
							.replace("faciltiy_city", notificationTemplate.getFacility().getCity())
							.replace("from_time", formatDate(notificationTemplate.getFromTime()))
							.replace("c_name", notificationTemplate.getConsumer().getUserName()).replace("c_mobileNo",
									notificationTemplate.getConsumer().getMobileNo().replace("+", "%2B")),
					phoneNums.toString(), key, sender);
	}

	public static void sendMeetingReminder(JobData data, boolean serviceProvider)
			throws MessagingException, IOException {
		Template template;
		MimeMultipart content;
		if (serviceProvider) {
			template = addFooter(readFile("mailTemplates/meetingReminderSp.html"));
			content = template.getMultipart();
			String body = template.getBody();
			template = addImage(body, getContentId(), "reminder");
			content.addBodyPart(template.getImagePart());
			MimeBodyPart bodyPart = new MimeBodyPart();
			bodyPart.setText(template.getBody().replace("user_name", data.getSpName())
					.replace("facility_place", data.getCityName()).replace("c_name", data.getcName())
					.replace("meeting_time", formatDate(data.getDate())).replace("c_mobileNo", data.getcMobileNo()),
					"US-ASCII", "html");
			content.addBodyPart(bodyPart, 0);

			if (data.isSpMobileNoVerified())
				new SMSService().sendSMS(
						"Hi username. This is just a friendly reminder that, your office space at place is been booked by consumer for a meeting today from time. "
								+ "Please contact us for more details.".replace("username", data.getSpName())
										.replace("place", data.getCityName()).replace("consumer", data.getcName())
										.replace("time", formatDate(data.getDate())),
						data.getSpMobileNo(), key, sender);

			new EmailService().sendEmail(data.getSpEmailId(), "Huddil - Meeting Reminder", content);
		} else {
			template = addFooter(readFile("mailTemplates/meetingReminderConsumer.html"));
			content = template.getMultipart();
			String body = template.getBody();
			template = addImage(body, getContentId(), "reminder");
			content.addBodyPart(template.getImagePart());
			MimeBodyPart bodyPart = new MimeBodyPart();
			bodyPart.setText(
					template.getBody().replace("user_name", data.getcName())
							.replace("facility_place", data.getCityName())
							.replace("meeting_time", formatDate(data.getDate())).replace("sp_name", data.getSpName())
							.replace("sp_emailId", data.getSpEmailId()).replace("sp_mobileNo", data.getSpMobileNo()),
					"US-ASCII", "html");
			content.addBodyPart(bodyPart, 0);
			if (data.iscMobileNoVerified())
				new SMSService().sendSMS(
						"Hi username. This is a friendly reminder that you have a booked a meeting on time. Please contact us for more assistance on your meeting."
								.replace("username", data.getcName()).replace("place", data.getCityName())
								.replace("time", formatDate(data.getDate())),
						data.getcMobileNo(), key, sender);
			new EmailService().sendEmail(data.getcEmailId(), "Huddil - Meeting Reminder", content);
		}
	}

	public static void sendCancellationDetails(CancellationNotificationTemplate notificationTemplate, boolean consumer)
			throws AddressException, MessagingException, IOException {
		if (notificationTemplate.getConsumer().getEmailId().equalsIgnoreCase(notificationTemplate.getSp().getEmailId()))
			return;
		Template template;
		String message, body;
		MimeMultipart content;
		MimeBodyPart bodyPart;
		FacilityCancellationCharges cancellationCharges = notificationTemplate.getCancellationCharges();
		String cancellationData = "<table   width=\"50%\" id=\"customers\">";
		if (cancellationCharges.getDuration1() != 0)
			cancellationData += addCancellationData(cancellationCharges.getDuration1(),
					cancellationCharges.getPercentage1());
		if (cancellationCharges.getDuration2() != 0)
			cancellationData += addCancellationData(cancellationCharges.getDuration2(),
					cancellationCharges.getPercentage2());
		if (cancellationCharges.getDuration3() != 0)
			cancellationData += addCancellationData(cancellationCharges.getDuration3(),
					cancellationCharges.getPercentage3());
		cancellationData += "</table>";

		if (consumer) {
			template = addFooter(readFile("mailTemplates/CancellationConsumerToConsumer.html"));
			message = "Dear user_name, Your booking (Booking Id : bookingId) has been cancelled successfully. Please refer to the cancellation email for refund details."
					.replace("user_name", notificationTemplate.getConsumer().getDisplayName())
					.replace("bookingId", Integer.toString(notificationTemplate.getBookingId()));
			content = template.getMultipart();
			body = template.getBody();
			template = addImage(body, getContentId(), "cancel");
			content.addBodyPart(template.getImagePart());
			bodyPart = new MimeBodyPart();
			bodyPart.setText(
					template.getBody().replace("user_name", notificationTemplate.getConsumer().getDisplayName())
							.replace("booking_id", Integer.toString(notificationTemplate.getBookingId()))
							.replace("cancellation_table", cancellationData)
							.replace("refund_amt", String.format("%.2f", notificationTemplate.getRefundAmt())),
					"US-ASCII", "html");
			content.addBodyPart(bodyPart, 0);
		} else {
			template = addFooter(readFile("mailTemplates/CancellationSpToConsumer.html"));
			message = "Dear user_name, Your booking (Booking Id : bookingId) has been cancelled by the facility owner. Please check your email for refund details."
					.replace("user_name", notificationTemplate.getConsumer().getDisplayName())
					.replace("bookingId", Integer.toString(notificationTemplate.getBookingId()));
			content = template.getMultipart();
			body = template.getBody();
			template = addImage(body, getContentId(), "cancel");
			content.addBodyPart(template.getImagePart());
			bodyPart = new MimeBodyPart();
			bodyPart.setText(
					template.getBody().replace("user_name", notificationTemplate.getConsumer().getDisplayName())
							.replace("booking_id", Integer.toString(notificationTemplate.getBookingId()))
							.replace("cancellation_table", cancellationData)
							.replace("refund_amt", String.format("%.2f", notificationTemplate.getRefundAmt())),
					"US-ASCII", "html");
			content.addBodyPart(bodyPart, 0);
		}
		new EmailService().sendEmail(notificationTemplate.getConsumer().getEmailId(), "Huddil - Booking Cancelled",
				content);
		if (notificationTemplate.getConsumer().isMobileNoVerified())
			new SMSService().sendSMS(message, notificationTemplate.getConsumer().getMobileNo(), key, sender);
		if (consumer) {
			template = addFooter(readFile("mailTemplates/CancellationConsumerToSp.html"));
			content = template.getMultipart();
			body = template.getBody();
			template = addImage(body, getContentId(), "cancel");
			content.addBodyPart(template.getImagePart());
			bodyPart = new MimeBodyPart();
			bodyPart.setText(template.getBody().replace("user_name", notificationTemplate.getSp().getDisplayName())
					.replace("from_time", formatDate(notificationTemplate.getFromTime()))
					.replace("faciltiy_city", notificationTemplate.getPlace())
					.replace("booking_id", Integer.toString(notificationTemplate.getBookingId()))
					.replace("cancellation_table", cancellationData)
					.replace("refund_amt", String.format("%.2f", notificationTemplate.getRefundAmt()))
					.replace("facility_city", notificationTemplate.getPlace()), "US-ASCII", "html");
			content.addBodyPart(bodyPart, 0);
			new EmailService().sendEmail(notificationTemplate.getSp().getEmailId(), "Huddil - Booking Cancelled",
					content);
			if (notificationTemplate.getSp().isMobileNoVerified()) {
				message = "Dear user_name, Unfortunately the facility booking scheduled on from_time (Booking Id : bookingId) has been cancelled by the consumer."
						.replace("user_name", notificationTemplate.getSp().getDisplayName())
						.replace("from_time", formatDate(notificationTemplate.getFromTime()))
						.replace("bookingId", Integer.toString(notificationTemplate.getBookingId()));
				new SMSService().sendSMS(message, notificationTemplate.getSp().getMobileNo(), key, sender);
			}
		}
	}

	public static void sendMeetinEndReminder(String userName, String phoneNumber, boolean isMobileNoVerified)
			throws IOException {
		if (isMobileNoVerified)
			new SMSService().sendSMS(
					"Dear user, Your meeting session at facility is going to get completed within 5 minutes. Thanks for using Huddil."
							.replace("user", userName),
					phoneNumber, key, sender);
	}

	public static void sendEnquiry(CallMeBack callMeBack, Facility facility) throws MessagingException, IOException {
		Template template;
		MimeMultipart content;
		template = addFooter(readFile("mailTemplates/FacilityEnquiry.html"));
		content = template.getMultipart();
		String body = template.getBody();
		template = addImage(body, getContentId(), "confirm");
		content.addBodyPart(template.getImagePart());
		MimeBodyPart bodyPart = new MimeBodyPart();
		body = template.getBody().replace("user_name", facility.getSp().getDisplayName())
				.replace("body_text", callMeBack.getBody()).replace("facility_name", facility.getTitle())
				.replace("faciltiy_city", facility.getCity())
				.replace("facility_locality", facility.getLocation().getName()).replace("c_name", callMeBack.getName())
				.replace("c_emailID", callMeBack.getEmailId()).replace("c_mobileNo", callMeBack.getMobileNo());
		if (callMeBack.getTotalPrice() == 0.0)
			body = body.replace("<tr><td width=\"30%\">Amount</td><td width=\"50%\">amt</td></tr>"
					+ "<tr><td>From Date/Time</td><td>from_time</td></tr>"
					+ "<tr><td>To Date/Time</td><td>to_time</td></tr>", "");
		else
			body = body.replace("amt", String.format("%.2f", callMeBack.getTotalPrice()))
					.replace("from_time", formatDate(callMeBack.getFromDateTime()))
					.replace("to_time", formatDate(callMeBack.getToDateTime()));

		bodyPart.setText(body, "US-ASCII", "html");
		content.addBodyPart(bodyPart, 0);
		List<InternetAddress> emailIds = new ArrayList<InternetAddress>();
		emailIds.add(new InternetAddress("no-reply@huddil.com"));
		emailIds.add(new InternetAddress(facility.getEmailId()));
		emailIds.add(new InternetAddress(facility.getSp().getEmailId()));
		if (!TextUtils.isEmpty(facility.getAlternateEmailId()))
			emailIds.add(new InternetAddress(facility.getAlternateEmailId()));
		if (!emailIds.isEmpty())
			new EmailService().sendEmail(emailIds, "Huddil - Enquiry", content);
	}

	private static String addCancellationData(int duration, Double charges) {
		return "<tr><td style=\"border: 1px solid #ddd; padding: 6px;\">Before " + duration
				+ " Days</td><td style=\"border: 1px solid #ddd; padding: 6px;\"> " + charges + "% </td></tr>";
	}

	private static Template addFooter(String body) throws MessagingException {
		MimeMultipart content = new MimeMultipart("related");
		Template imageTemplate = addImage(body, getContentId(), "facebook");
		content.addBodyPart(imageTemplate.getImagePart());
		imageTemplate = addImage(imageTemplate.getBody(), getContentId(), "linked");
		content.addBodyPart(imageTemplate.getImagePart());
		imageTemplate = addImage(imageTemplate.getBody(), getContentId(), "twitter");
		content.addBodyPart(imageTemplate.getImagePart());
		imageTemplate = addImage(imageTemplate.getBody(), getContentId(), "google");
		content.addBodyPart(imageTemplate.getImagePart());
		imageTemplate = addImage(imageTemplate.getBody(), getContentId(), "instagram");
		content.addBodyPart(imageTemplate.getImagePart());
		imageTemplate = addImage(imageTemplate.getBody(), getContentId(), "blogbeats");
		content.addBodyPart(imageTemplate.getImagePart());
		return new Template(imageTemplate.getBody(), content);
	}

	private static Template addImage(String body, String id, String name) throws MessagingException {
		MimeBodyPart imgPart = new MimeBodyPart();
		switch (name) {
		case "facebook":
			body = body.replace("facebookCid", id);
			imgPart.setDataHandler(new DataHandler(
					new ByteArrayDataSource(DatatypeConverter.parseBase64Binary(imageFaceBook), "image/png")));
			break;
		case "linked":
			body = body.replace("linkedCid", id);
			imgPart.setDataHandler(new DataHandler(
					new ByteArrayDataSource(DatatypeConverter.parseBase64Binary(imageLinkedIn), "image/png")));
			break;
		case "twitter":
			body = body.replace("twitterCid", id);
			imgPart.setDataHandler(new DataHandler(
					new ByteArrayDataSource(DatatypeConverter.parseBase64Binary(imageTwitter), "image/png")));
			break;
		case "google":
			body = body.replace("googleCid", id);
			imgPart.setDataHandler(new DataHandler(
					new ByteArrayDataSource(DatatypeConverter.parseBase64Binary(imageGoogle), "image/png")));
			break;
		case "instagram":
			body = body.replace("instagramCid", id);
			imgPart.setDataHandler(new DataHandler(
					new ByteArrayDataSource(DatatypeConverter.parseBase64Binary(imageInstagram), "image/png")));
			break;
		case "blogbeats":
			body = body.replace("blogbeatsCid", id);
			imgPart.setDataHandler(new DataHandler(
					new ByteArrayDataSource(DatatypeConverter.parseBase64Binary(imageBlogbeats), "image/png")));
			break;
		case "reminder":
			body = body.replace("reminderCid", id);
			imgPart.setDataHandler(new DataHandler(
					new ByteArrayDataSource(DatatypeConverter.parseBase64Binary(headerReminder), "image/png")));
			break;
		case "confirm":
			body = body.replace("confirmCid", id);
			imgPart.setDataHandler(new DataHandler(
					new ByteArrayDataSource(DatatypeConverter.parseBase64Binary(headerBookingConfirm), "image/png")));
			break;
		case "cancel":
			body = body.replace("cancelCid", id);
			imgPart.setDataHandler(new DataHandler(
					new ByteArrayDataSource(DatatypeConverter.parseBase64Binary(headerCancel), "image/png")));
			break;
		}
		imgPart.setContentID("<" + id + ">");
		imgPart.setDisposition(MimeBodyPart.INLINE);
		return new Template(body, imgPart);
	}

	private static String getContentId() {
		int c = (seq++) % 100000;
		return c + "." + System.currentTimeMillis() + "@" + "huddil";
	}

	private static String readFile(String fileName) throws IOException {
		BufferedReader br = new BufferedReader(
				new FileReader(Thread.currentThread().getContextClassLoader().getResource(fileName).getPath()));
		String body = br.readLine();
		br.close();
		return body;
	}

	private static String formatDate(Date date) {
		SimpleDateFormat formatter = new SimpleDateFormat("dd-MM-yyyy HH:mm");
		return formatter.format(date);
	}
}

class Template {
	private String body;
	private MimeBodyPart imagePart;
	private MimeMultipart multipart;

	public Template(String body, MimeMultipart multipart) {
		super();
		this.body = body;
		this.multipart = multipart;
	}

	public Template(String body, MimeBodyPart imagePart) {
		this.body = body;
		this.imagePart = imagePart;
	}

	public String getBody() {
		return body;
	}

	public void setBody(String body) {
		this.body = body;
	}

	public MimeBodyPart getImagePart() {
		return imagePart;
	}

	public void setImagePart(MimeBodyPart imagePart) {
		this.imagePart = imagePart;
	}

	public MimeMultipart getMultipart() {
		return multipart;
	}

	public void setMultipart(MimeMultipart multipart) {
		this.multipart = multipart;
	}
}
